apiVersion: v1
kind: Pod
metadata:
  name: __USER__
  labels:
    app: session-host
    user: __USER__
spec:
  restartPolicy: OnFailure
  # use an init container to add relevant entries for passwd and group so that the user at least has their own info
  initContainers:
  - name: passwd
    image: __IMAGE__
    command:
    - bash 
    args:
    - -c
    - cp /etc/passwd /out/passwd && echo '__USER__:x:__UID__:__GID__:__USER__:__HOME__:__SHELL__' >> /out/passwd
    volumeMounts:
    - name: passwd-conf
      mountPath: /out
  containers:
  - name: tmux
    image: __IMAGE__
    command:
    - /bin/bash
    args:
    - -c
    - sleep infinity
    stdin: True
    tty: True
    securityContext:
      runAsUser: __UID__
      capabilities:
        drop:
        - AUDIT_WRITE
        - DAC_OVERRIDE
        - MKNOD
        - NET_BIND_SERVICE
        - NET_RAW
        - SETGID
        - SETUID
        - SYS_CHROOT
    volumeMounts:
    - name: passwd-conf
      mountPath: /etc/passwd
      readOnly: True
      subPath: passwd
    - name: home
      mountPath: "__HOME__"
    - name: tmp
      mountPath: /tmp/
    # make use of a statically built tmux that we bind mount in
    - name: tmux
      mountPath: /usr/local/bin/tmux
  securityContext:
    fsGroup: __GID__
    supplementalGroups: [ __SUP_GID__ ]
  volumes:
  - name: passwd-conf
    emptyDir: {}
  # this shoudl probably be a pvc or hostpath
  - name: home
    emptyDir: {}
  - name: tmp
    emptyDir: {}
  # TODO: shoudl put this in a real PVC
  - name: tmux
    hostPath:
      path: /opt/tmux
      type: File
